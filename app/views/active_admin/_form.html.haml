= semantic_form_for [:admin, @effective_page] do |f|
  = f.inputs "Page" do
    = f.input :title, :hint => "Give this page a title"
    = f.input :meta_keywords, :hint => "Comma seperated keywords or tags related to this page content."
    = f.input :meta_description, :hint => "A one or two sentence summary of this page. Appears on Google search results underneath the page title."
    - if !f.object.new_record? or f.object.errors.include?(:slug)
      = f.input :slug, :hint => "The slug controls this page's internet address. Be careful, changing the slug will break links that other websites may have to the old address.<br>This page is currently reachable via http://#{request.host}/<strong>#{f.object.slug}</strong>/".html_safe

  = f.inputs 'Page Template', :id => 'page_templates' do
    %li
      %fieldset.choices
        %label.label Template*
        %ol.choices-group
          - EffectivePages.templates.each do |template, _|
            - info = EffectivePages.templates_info[template] || {}
            %li.template{'data-template' => template, :title => info[:label] || template, :class => ('active' if f.object.template == template) }
              %label
                = radio_button(:effective_page, :template, template)
                = image_tag(info[:image] || 'effective_pages/missing_template_image.png', :alt => template)

    - EffectivePages.templates.each do |template, vals|
      - info = EffectivePages.templates_info[template] || {}
      %li.template-info{'data-template' => template, :class => ('active' if f.object.template == template)}
        %label.label= info[:label] || template
        %p= info[:description]
        %br
        %p Content Regions:
        %ul
          - vals[:regions].keys.each do |region|
            %li= "#{info[:regions][region][:label] rescue region}#{(': ' + info[:regions][region][:description]) rescue ''}"
          - if vals[:regions].keys.length == 0
            %li none



  = f.actions do
    = f.action :submit
    = f.action :submit, :button_html => { :value => 'Save and Edit Content' }
    = f.action :cancel
