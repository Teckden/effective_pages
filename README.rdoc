= EffectivePages

This project rocks and uses MIT-LICENSE.

To set up in your main project:

Add to your Gemfile:

  gem 'effective_pages', :path => "~/Sites/effective_pages"

Run the installer

  rails generate effective_pages:install

  * This will install all required migrations.

Migrate the database

  bundle exec rake db:migrate

Mount the Engine for route

  mount EffectivePages::Engine => '/', :as => 'effective_pages'

Add to your layout file(s)

  = effective_page_header_tags

ActiveAdmin

  Should just work if you have ActiveAdmin installed

  But you have to add the custom JS:  effective_pages.js
  And the custom stylesheet:  effective_pages.css


Authorization

  This can be handled by a Proc or a method

  Proc:

  in effective_pages.rb initializer

  = config.authorization_method = Proc.new { |controller, resource, action| can?(action, resource || EffectivePages::Page) }

  Method:

  in effective_pages.rb initializer

  = config.authorization_method = :can_edit_page?

  and in application_controller.rb

  def can_edit_page?(resource, action)
    # self is the controller
    true
  end

  If the method or proc returns false an ActiveResource::UnauthorizedAccess will be raised

  Again in your application_controller.rb

  rescue_from CanCan::AccessDenied, ActiveResource::UnauthorizedAccess do |exception|  # This is not the ActiveAdmin AccessDenied
    respond_to do |format|
      format.html { render 'static_pages/access_denied', :status => 403 }
      format.any { render :text => 'Access Denied', :status => 403 }
    end
  end

  This is intended to be a flow through to CanCan, so the following actions are used:
  :read, :create, :update, :destroy, :manage



TESTING:

Don't put migrations into the dummy app

effective_assets/ > bundle exec rake app:db:test:prepare
effective_assets/ > bundle exec rake app:db:migrate
effective_assets/ > guard

MERCURY:

To update mercury2

cd /app/assets/mercury
git pull origin mercury2
